{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fnil\fcharset0 BaskOldFace;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red255\green0\blue255;\red83\green83\blue83;\red29\green48\blue13;
\red0\green0\blue255;}
{\*\expandedcolortbl;;\csgenericrgb\c100000\c0\c100000;\cssrgb\c40000\c40000\c40000;\csgenericrgb\c11373\c18824\c5098;
\csgenericrgb\c0\c0\c100000;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs26 \cf2 Isabella\'92s \expnd0\expndtw0\kerning0
Analysis and Behaviors of Fundamental Algorithms and Data Structures-\cf4 See Explanations and Big O on Paper that I handed in- \cf5 did all three extensions/optional problems
\f1 \kerning1\expnd0\expndtw0 \

\fs24 \cf0 1) Binary Search\
	-change array on line 30\
	-user interface checks if number is in the array on line 30\
	-check out big O on paper!\
2) Birthday Problem\
	-user interface does the birthday problem (user is able to enter their own numbers)\
3) \cf5 California Problem (Unbiased Selection) \cf0 \
	-order for the problem is declared on line 5\
	-method called compareTo\
	-toString method\
	-testing case in the main method-creates new objects and compares them to each other on 	lines 38-42\
	-the methods should print whatever value is commented out next to them for example on like 	38 (a positive value 1)\
	-these calls check that the method works\
4) Comparing\
	-this class compares a stack with a Linked List and a Stack with an array times\
	-it tests the pushing and popping methods for each\
	-prints out time after each\
	-allows analysis that resizing arrays are faster than linked lists for stacks\
5) Insertion Sort\
	-randomly fills up array in randomlyfillup method\
	-prints unsorted\
	-sorts array (prints time before and after)\
	-prints sorted array\
	-way for user to see that insertion sort method works\
6) \cf5 Kendall Tau Distance	\cf0 \
	-takes two arrays created on lines 17 & 18\
	-prints what calculatektd using those 2 arrays returns\
7) Merge Sort\
	-msort (main merge sort method, recursive)\
	-merge method, merges two arrays\
	-in main randomly fills up array and prints it\
	-then sorts array and prints it sorted\
8) Quick Sort\
	-qsort is main quick sort method\
	-in main randomly fills up array, prints it\
	-sorts that random array and prints it again\
	-simple user interface\
9) Selection Sort\
	-\cf5 extension is stablesort method-which is stable selection sort\
\cf0 	-ssort is regular selection sort\
	-line 56 can either do stablesort or ssort\
	-randomly fills up array, prints it, sorts it and prints again!\
	-also prints timing before and after\
10) Stack \
	-regular stack with Linked List and classic methods\
	-used in comparing class\
11) Stack using Array\
	-classic methods but edited for array stack\
	-used in comparing class}